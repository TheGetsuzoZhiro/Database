import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Random;
import java.util.Scanner;

public class GPTSession {
    private static String sessionId = null;
    private static final String API_KEY = "GetsuzoCp7";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Buat sessionId sekali saja (6 digit angka)
        if (sessionId == null) {
            sessionId = String.valueOf(100000 + new Random().nextInt(900000));
            System.out.println("üìå Session ID dibuat: " + sessionId);
        }

        while (true) {
            System.out.print("\nüí¨ Masukkan pertanyaan (atau ketik 'exit' untuk keluar): ");
            String query = scanner.nextLine();

            if (query.equalsIgnoreCase("exit")) {
                System.out.println("üö™ Program dihentikan.");
                break;
            }

            String encodedQuery;
            try {
                encodedQuery = URLEncoder.encode(query, "UTF-8");
            } catch (Exception e) {
                System.out.println("‚ùå Error encode query: " + e.getMessage());
                continue;
            }

            String apiUrl = "https://api.neoxr.eu/api/gpt4-session?q="
                    + encodedQuery
                    + "&session=" + sessionId
                    + "&apikey=" + API_KEY;

            // Kirim request, coba maksimal 2 kali kalau gagal
            String response = sendRequest(apiUrl);
            if (response == null) {
                System.out.println("üîÑ Coba ulang...");
                response = sendRequest(apiUrl);
            }

            if (response != null) {
                String message = extractMessage(response);
                if (message != null && !message.isEmpty()) {
                    System.out.println("\nü§ñ Jawaban GPT:");
                    System.out.println(message);
                } else {
                    System.out.println("‚ùå Gagal membaca message dari API.");
                    System.out.println("Response mentah:\n" + response);
                }
            } else {
                System.out.println("‚ùå Gagal mendapatkan respon dari API setelah 2 kali percobaan.");
            }
        }

        scanner.close();
    }

    private static String sendRequest(String apiUrl) {
        try {
            HttpURLConnection conn = (HttpURLConnection) new URL(apiUrl).openConnection();
            conn.setRequestMethod("GET");
            conn.setRequestProperty("User-Agent", "Java-NetBeans");

            BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            StringBuilder response = new StringBuilder();
            String inputLine;

            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();

            return response.toString();
        } catch (Exception e) {
            return null;
        }
    }

    // Ambil isi "message" dari objek "data" di JSON string tanpa library JSON
    private static String extractMessage(String json) {
        try {
            int dataPos = json.indexOf("\"data\":");
            if (dataPos == -1) return null;

            int startBrace = json.indexOf("{", dataPos);
            int endBrace = json.indexOf("}", startBrace);
            if (startBrace == -1 || endBrace == -1) return null;

            String dataContent = json.substring(startBrace + 1, endBrace);

            String messageKey = "\"message\":\"";
            int msgStart = dataContent.indexOf(messageKey);
            if (msgStart == -1) return null;
            msgStart += messageKey.length();

            int msgEnd = dataContent.indexOf("\"", msgStart);
            if (msgEnd == -1) return null;

            String message = dataContent.substring(msgStart, msgEnd)
                    .replace("\\n", "\n")
                    .replace("\\\"", "\"");

            return message;
        } catch (Exception e) {
            return null;
        }
    }
}
