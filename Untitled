import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Random;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class GPTSession {
    private static String sessionId = null;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        if (sessionId == null) {
            sessionId = "USER" + new Random().nextInt(1000000);
            System.out.println("üìå Session ID dibuat: " + sessionId);
        }

        while (true) {
            System.out.print("\nüí¨ Masukkan pertanyaan (atau 'exit' untuk keluar): ");
            String query = scanner.nextLine();

            if (query.equalsIgnoreCase("exit")) {
                System.out.println("üö™ Program dihentikan.");
                break;
            }

            try {
                String encodedQuery = URLEncoder.encode(query, "UTF-8");
                String apiUrl = "https://api.neoxr.eu/api/gpt4-session?q="
                        + encodedQuery
                        + "&session=" + sessionId
                        + "&apikey=GetsuzoCp7";

                HttpURLConnection conn = (HttpURLConnection) new URL(apiUrl).openConnection();
                conn.setRequestMethod("GET");
                conn.setRequestProperty("User-Agent", "Java-NetBeans");

                BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                StringBuilder response = new StringBuilder();
                String inputLine;
                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                String resStr = response.toString();

                // Ambil "message" dari objek "data"
                String message = extractNestedJsonValue(resStr, "data", "message");

                if (message == null || message.isEmpty()) {
                    message = "(Tidak ada pesan dari GPT)";
                }

                System.out.println("\nü§ñ GPT:");
                System.out.println(message);

            } catch (Exception e) {
                System.out.println("‚ùå Gagal mengambil jawaban: " + e.getMessage());
            }
        }

        scanner.close();
    }

    // Fungsi ambil nested key seperti data.message
    private static String extractNestedJsonValue(String json, String parentKey, String childKey) {
        String parentPattern = "\"" + parentKey + "\":\\{([^}]*)\\}";
        Pattern p1 = Pattern.compile(parentPattern);
        Matcher m1 = p1.matcher(json);
        if (m1.find()) {
            String innerJson = m1.group(1);
            String childPattern = "\"" + childKey + "\":\"([^\"]*)\"";
            Pattern p2 = Pattern.compile(childPattern);
            Matcher m2 = p2.matcher(innerJson);
            if (m2.find()) {
                return m2.group(1).replace("\\n", "\n").replace("\\\"", "\"");
            }
        }
        return null;
    }
}
