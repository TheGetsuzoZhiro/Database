import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Random;
import java.util.Scanner;
import org.json.JSONObject;

public class GPTSession {
    private static String sessionId = null; // hanya sekali untuk 1 user

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Buat sessionId sekali saja
        if (sessionId == null) {
            sessionId = "USER" + new Random().nextInt(1000000);
            System.out.println("üìå Session ID dibuat: " + sessionId);
        }

        while (true) {
            System.out.print("\nüí¨ Masukkan pertanyaan (atau 'exit' untuk keluar): ");
            String query = scanner.nextLine();

            if (query.equalsIgnoreCase("exit")) {
                System.out.println("üö™ Program dihentikan.");
                break;
            }

            try {
                // Encode query untuk URL
                String encodedQuery = URLEncoder.encode(query, "UTF-8");

                // URL API
                String apiUrl = "https://api.neoxr.eu/api/gpt4-session?q="
                        + encodedQuery
                        + "&session=" + sessionId
                        + "&apikey=GetsuzoCp7";

                // Bikin koneksi
                HttpURLConnection conn = (HttpURLConnection) new URL(apiUrl).openConnection();
                conn.setRequestMethod("GET");
                conn.setRequestProperty("User-Agent", "Java-NetBeans");

                // Baca respon
                BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                StringBuilder response = new StringBuilder();
                String inputLine;
                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                // Parsing JSON
                JSONObject json = new JSONObject(response.toString());

                // Ambil field jawaban (sesuaikan sama struktur API)
                String answer;
                if (json.has("data")) {
                    answer = json.getString("data");
                } else if (json.has("result")) {
                    answer = json.getString("result");
                } else {
                    answer = response.toString(); // fallback
                }

                // Tampilkan clean
                System.out.println("\nü§ñ GPT:");
                System.out.println(answer);

            } catch (Exception e) {
                System.out.println("‚ùå Gagal mengambil jawaban: " + e.getMessage());
            }
        }

        scanner.close();
    }
}
